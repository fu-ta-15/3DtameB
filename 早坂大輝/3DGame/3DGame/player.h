//=============================================================================
//
// プレイヤーの処理 [model.h]
// Author:Taiki Hayasaka
//
//=============================================================================
#ifndef _PLAYER_H_
#define _PLAYER_H_

#include "main.h"

//=============================================================================
// マクロ定義
//=============================================================================
#define MAX_USE_MODEL (2)	//モデルの最大数

//=============================================================================
// モデルの構造体
//=============================================================================
typedef struct
{
	LPD3DXMESH pMesh;		//メッシュへのポインタ
	LPD3DXBUFFER pBuffMat;	//マテリアルへのポインタ
	DWORD nNumMat;			//マテリアルの数
	D3DXVECTOR3 pos;		//位置(オフセット)
	D3DXVECTOR3 rot;		//向き
	D3DXMATRIX mtxWorld;	//ワールドマトリックス
	int nIdxModelParent;	//親モデルのインデックス
}Model;

//=============================================================================
// プレイヤーの構造体
//=============================================================================
typedef struct
{
	D3DXVECTOR3 pos;		//中心座標
	D3DXVECTOR3 rot;		//回転
	D3DXVECTOR3 rotDest;	//目的の向き
	D3DXVECTOR3 move;		//移動量
	D3DXMATRIX mtxWorld;	//ワールドマトリックス
	float boost;			//ジャンプブースト
	bool bUse;				//使用しているか
	int nShadow;			//影

	Model aModel[MAX_USE_MODEL];	//モデル(パーツ)
	int nNumModel;					//モデル(パーツ)数
}Player;

//=============================================================================
// プロトタイプ宣言
//=============================================================================
void InitPlayer(void);
void UninitPlayer(void);
void UpdatePlayer(void);
void DrawPlayer(void); 
Player *GetPlayer(void);

#endif
